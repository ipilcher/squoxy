#!/bin/sh
#
# squoxy	Squeezebox discovery forwarder
#
# chkconfig:	345 45 85
# description:	Squeezebox media players use IPv4 UDP broadcast messages \
#		(sent to 255.255.255.255:3483) to query for available \
#		media servers.  Squoxy listens for these queries on one \
#		network interface (the source interface) and forwards \
#		them to the destination network interface.
#
# Copyright 2014 Ian Pilcher <arequipeno@gmail.com>
#
# This program is free software.  You can redistribute it or modify it under
# the terms of version 2 of the GNU General Public License (GPL), as published
# by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY -- without even the implied warranty of MERCHANTIBILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the text of the GPL for more details.
#
# Version 2 of the GNU General Public License is available at:
#
#   http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
#

# Source function library.
. /etc/rc.d/init.d/functions

exec=/home/pilcher/squoxy
prog=squoxy
pidfile=/var/run/squoxy.pid

[ -e /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog

lockfile=/var/lock/subsys/$prog

start() {
	[ -x $exec ] || exit 5
	echo -n $"Starting $prog: "
	daemon $exec $SQUOXY_SOURCE_IF $SQUOXY_DEST_IF
	retval=$?
	echo
	[ $retval -eq 0 ] && touch $lockfile
	return $retval
}

stop() {
	echo -n $"Stopping $prog: "
	killproc -p $pidfile $prog
	retval=$?
	if [ $retval -eq 0 ]; then
		echo_success
		rm -f $lockfile
		rm -f $pidfile
	else
		echo_failure
	fi
	echo
	return $retval
}

restart() {
	stop
	start
}

reload() {
	restart
}

force_reload() {
	restart
}

rh_status() {
	status $prog
}

rh_status_q() {
	rh_status >/dev/null 2>&1
}

case "$1" in
	start)
		rh_status_q && exit 0
		$1
		;;
	stop)
		rh_status_q || exit 0
		$1
		;;
	restart)
		$1
		;;
	reload)
		rh_status_q || exit 7
		$1
		;;
	force-reload)
		force_reload
		;;
	status)
		rh_status
		;;
	condrestart|try-restart)
		rh_status_q || exit 0
		restart
		;;
	*)
		echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
		exit 2
esac

exit $?

